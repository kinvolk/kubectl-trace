FROM alpine:3.8 as builder
ARG bpftracesha
ENV STATIC_LINKING=ON
ENV RUN_TESTS=0
RUN apk add --update \
  bison \
  build-base \
  clang-dev \
  clang-static \
  cmake \
  elfutils-dev \
  flex-dev \
  git \
  linux-headers \
  llvm5-dev \
  llvm5-static \
  zlib-dev

RUN apk add --update \
  curl \
  python

# Put LLVM directories where CMake expects them to be
RUN ln -s /usr/lib/cmake/llvm5 /usr/lib/cmake/llvm
RUN ln -s /usr/include/llvm5/llvm /usr/include/llvm
RUN ln -s /usr/include/llvm5/llvm-c /usr/include/llvm-c

WORKDIR /
ADD https://github.com/iovisor/bpftrace/archive/${bpftracesha}.tar.gz /bpftrace.tar.gz
RUN tar -xvf /bpftrace.tar.gz
RUN mv bpftrace-${bpftracesha} /bpftrace

## Alpine currently does not have a package for bcc. Until they do,
## we'll peg the alpine build to bcc v0.8.0
##
## We're building here so docker can cache the build layer
#RUN curl -L https://github.com/iovisor/bcc/archive/v0.7.0.tar.gz \
#  --output /bcc.tar.gz
#RUN tar xvf /bcc.tar.gz
#RUN mv bcc-0.7.0 bcc
#RUN cd /bcc && mkdir build && cd build && cmake .. && make install -j4 && \
#  cp src/cc/libbcc.a /usr/local/lib64/libbcc.a && \
#  cp src/cc/libbcc-loader-static.a /usr/local/lib64/libbcc-loader-static.a && \
#  cp src/cc/libbpf.a /usr/local/lib64/libbpf.a

WORKDIR /bpftrace/docker
RUN sed -i 's/^const int STRING_SIZE.*$/const int STRING_SIZE = 210;/g' /bpftrace/src/types.h

# https://github.com/iovisor/bcc/pull/2149
RUN sed -i 's/bpf_create_map/bcc_create_map/g' /bpftrace/src/map.cpp
RUN sed -i 's/bpf_prog_load/bcc_prog_load/g' /bpftrace/src/attached_probe.cpp

COPY bpf.h /usr/include/linux/
RUN sh build.sh /bpftrace/build-release Release
